const _ = require('lodash');
const dataSources = require('./lib/dataSources');

function annotateDataSources(dataSources, key) {
  if (isAccessSchema(dataSources)) {
    return annotateAccessSchema(dataSources, key);
  } else if (_.isFunction(dataSources)) {
    return annotateBuilder(dataSources, key);
  } else if (_.isObject(dataSources)) {
    _.each(dataSources, (v, k) => {
      annotateDataSources(v, `${key}.${k}`);
    });
  }
}

function isAccessSchema(dataSource) {
  return _.get(dataSource, 'dataSource')
}

function annotateAccessSchema(accessSchema, key) {
  console.log(`#### **${key}**: ${accessSchema.name}\n`);
  console.log(`  - **dataSource**: \`${accessSchema.dataSource}\``);
  console.log(`  - **requiredParams:** ${_.keys(accessSchema.requiredParams).length ? '\n' : 'None\n'}`);
  _.each(accessSchema.requiredParams, (v, k) => {
   console.log(`    - ${k} : ${v.description || 'no description'}`);
  });
  console.log(`  - **optionalParams:** ${_.keys(accessSchema.optionalParams).length ? '' : 'None'}`);
  _.each(accessSchema.optionalParams, (v, k) => {
   console.log(`    - ${k} : ${v.description || 'no description'}`);
  });
}

function annotateBuilder(builder, key) {
}

console.log('## Builtin Data Sources');
console.log('This file is autogenerated by `npm run docs`\n\n\n');
annotateDataSources(dataSources, 'dataSources', 0);
